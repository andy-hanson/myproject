#pragma once

#include <glm/vec3.hpp>

#include "../util/DynArray.h"
#include "../util/FixedArray.h"
#include "../util/int.h"

#include "./Color.h"
#include "./ModelKind.h"
//Note: texture and vertex indices were parsed away from 1-based. So this is 1 less than what's in the file.

struct Face {
	u8 material;
	u8 vertex_0;
	u8 vertex_1;
	u8 vertex_2;
	u8 normal_0;
	u8 normal_1;
	u8 normal_2;
};

struct ParsedMaterial {
	u32 id; // Generated by incrementing. Starts at 1.
	float ns;
	Color ka;
	Color kd;
	Color ks;
	Color ke;
	float ni;
	float d;
	u8 illum;
};

struct Model {
	DynArray<ParsedMaterial> materials;
	DynArray<glm::vec3> vertices;
	DynArray<glm::vec3> normals;
	DynArray<Face> faces;
};
